if db_id('MarketRace') is not null 
begin 
	use master 
	drop database MarketRace
end

create database MarketRace
go

USE MarketRace
go
CREATE TABLE ROLES(
  ID_RO     INT          PRIMARY KEY identity(1,1), 
  DESCRIPCION    VARCHAR(20)      NOT NULL UNIQUE
  )
  go
  

CREATE TABLE USUARIOS(
  ID_US      INT          PRIMARY KEY identity(1,1), 
  DNI   CHAR(8)      NOT NULL UNIQUE,
  NOMBRE    VARCHAR(50)  NOT NULL,
  APELLIDO    VARCHAR(50)  NOT NULL,
  TELEFONO  VARCHAR(10)  NOT NULL UNIQUE,
  DIRECCION VARCHAR(150) NOT NULL,
  CORREO VARCHAR(100) NOT NULL UNIQUE,
  CLAVE  VARCHAR(50)  NOT NULL UNIQUE,
  ID_RO	 	  INT		  NOT NULL DEFAULT 1,
  IMAGEN 	VARCHAR(1000) NOT NULL DEFAULT 'https://res.cloudinary.com/dfuuywyk9/image/upload/v1621437436/l60Hf_megote.png',
  FOREIGN KEY (ID_RO) REFERENCES ROLES (ID_RO)
)
go

CREATE TABLE MARCAS
(
    ID_MA       INT PRIMARY KEY identity(1,1),
    DESCRIPCION VARCHAR(30) NOT NULL UNIQUE,
    IMAGEN 	VARCHAR(1000) NOT NULL DEFAULT 'https://res.cloudinary.com/dfuuywyk9/image/upload/v1621437436/l60Hf_megote.png'
)
go

CREATE TABLE CATEGORIAS
(
    ID_CA       INT PRIMARY KEY identity(1,1),
    DESCRIPCION VARCHAR(30) NOT NULL UNIQUE,
    IMAGEN 	VARCHAR(1000) NOT NULL DEFAULT 'https://res.cloudinary.com/dfuuywyk9/image/upload/v1621437436/l60Hf_megote.png'
)
go

CREATE TABLE REPUESTOS
(
    ID_RE      INT PRIMARY KEY identity(1,1),
    SKU			VARCHAR(30)		NOT NULL UNIQUE,
    TITULO VARCHAR(100)  NOT NULL UNIQUE,
    DESCRIPCION VARCHAR(100)  NOT NULL UNIQUE,
    PRECIO      DECIMAL(6, 2) NOT NULL CHECK (PRECIO > 0),
    CANTIDAD    TINYINT       NOT NULL CHECK (CANTIDAD >= 0),
	IMAGEN 	VARCHAR(1000) NOT NULL DEFAULT 'https://res.cloudinary.com/dfuuywyk9/image/upload/v1621437436/l60Hf_megote.png',
    ID_MA       INT			NOT NULL,
    ID_CA       INT			NOT NULL,
    ESTADO       TINYINT     NOT NULL DEFAULT 1,
    FOREIGN KEY (ID_MA) REFERENCES MARCAS (ID_MA),
	FOREIGN KEY (ID_CA) REFERENCES CATEGORIAS (ID_CA)
)
go

CREATE TABLE DISTRITOS
(
    ID_DI  INT PRIMARY KEY identity(1,1),
    NOM VARCHAR(50) NOT NULL
)
go


CREATE TABLE DIRECCION_ENVIOS
(
    ID_EN       INT PRIMARY KEY identity(1,1),
    DIRECCION  VARCHAR(100) NOT NULL UNIQUE,
    REFERENCIA VARCHAR(100) NOT NULL,
    ID_DI 	INT NOT NULL,
    FOREIGN KEY (ID_DI) REFERENCES DISTRITOS (ID_DI)
)
go

CREATE TABLE ESTADO_COMPROBANTES(
  ID_ES     TINYINT          PRIMARY KEY identity(1,1), 
  DESCRIPCION    VARCHAR(20)      NOT NULL UNIQUE
)
go

CREATE TABLE COMPROBANTES
(
    ID_CO          INT 	   NOT NULL identity(1,1),
    ID_US         INT     NOT NULL,
    FECHA_PE       DATE    NOT NULL,
    CANTIDAD_TOTAL TINYINT NOT NULL CHECK (CANTIDAD_TOTAL >0),
    DESCUENTO  DECIMAL(6,2) NOT NULL,
    PRETOTAL DECIMAL(6,2) NOT NULL,
    ID_ES		   TINYINT NOT NULL ,
    ID_EN			INT     NOT NULL,
    PRIMARY KEY (ID_CO),
    FOREIGN KEY (ID_ES) REFERENCES ESTADO_COMPROBANTES (ID_ES),
    FOREIGN KEY (ID_EN) REFERENCES DIRECCION_ENVIOS (ID_EN),
    FOREIGN KEY (ID_US) REFERENCES USUARIOS (ID_US)
)
go


create TABLE DETALLE_COMPROBANTES
(
    ID_CO    INT           NOT NULL,
    ID_RE   INT           NOT NULL,
    PRECIO   DECIMAL(6, 2) NOT NULL CHECK (PRECIO > 0),
    CANTIDAD TINYINT       NOT NULL CHECK (CANTIDAD >0),
    IMPORTE  DECIMAL(6, 2) NOT NULL CHECK (IMPORTE > 0),
	FOREIGN KEY (ID_CO) REFERENCES COMPROBANTES(ID_CO),
    FOREIGN KEY (ID_RE) REFERENCES REPUESTOS (ID_RE)
)
go



INSERT INTO ROLES(DESCRIPCION) VALUES('CLIENTE');
INSERT INTO ROLES(DESCRIPCION) VALUES('ADMINISTRADOR');
INSERT INTO ROLES(DESCRIPCION) VALUES('ASISTENTE DE VENTA');
GO

INSERT INTO DISTRITOS(NOM) VALUES ('LIMA');
INSERT INTO DISTRITOS(NOM) VALUES ('ANCON');
INSERT INTO DISTRITOS(NOM)  VALUES ('ATE');
INSERT INTO DISTRITOS(NOM)  VALUES ('BARRANCO');
INSERT INTO DISTRITOS(NOM)  VALUES ('BREÃ‘A');
INSERT INTO DISTRITOS(NOM)  VALUES ('CARABAYLLO');
INSERT INTO DISTRITOS(NOM)  VALUES ('CHACLACAYO');
INSERT INTO DISTRITOS(NOM)  VALUES ('CHORRILLOS');
INSERT INTO DISTRITOS(NOM)  VALUES ('CIENEGUILLA');
INSERT INTO DISTRITOS(NOM)  VALUES ('COMAS');
INSERT INTO DISTRITOS(NOM)  VALUES ('EL AGUSTINO');
INSERT INTO DISTRITOS(NOM)  VALUES ('INDEPENDENCIA');
INSERT INTO DISTRITOS(NOM)  VALUES ('JESUS MARIA');
INSERT INTO DISTRITOS(NOM)  VALUES ('LA MOLINA');
INSERT INTO DISTRITOS(NOM)  VALUES ('LA VICTORIA');
INSERT INTO DISTRITOS(NOM)  VALUES ('LINCE');
INSERT INTO DISTRITOS(NOM)  VALUES ('LOS OLIVOS');
INSERT INTO DISTRITOS(NOM)  VALUES ('LURIGANCHO');
INSERT INTO DISTRITOS(NOM)	VALUES ('LURIN');
INSERT INTO DISTRITOS(NOM)  VALUES ('MAGDALENA DEL MAR');
INSERT INTO DISTRITOS(NOM)  VALUES ('MAGDALENA VIEJA');
INSERT INTO DISTRITOS(NOM)  VALUES ('MIRAFLORES');
INSERT INTO DISTRITOS(NOM)  VALUES ('PACHACAMAC');
INSERT INTO DISTRITOS(NOM)  VALUES ('PUCUSANA');
INSERT INTO DISTRITOS(NOM)  VALUES ('PUENTE PIEDRA');
INSERT INTO DISTRITOS(NOM)  VALUES ('PUNTA HERMOSA');
INSERT INTO DISTRITOS(NOM)	VALUES ('PUNTA NEGRA');
INSERT INTO DISTRITOS(NOM)  VALUES ('RIMAC');
INSERT INTO DISTRITOS(NOM)  VALUES ('SAN BARTOLO');
INSERT INTO DISTRITOS(NOM)  VALUES ('SAN BORJA');
INSERT INTO DISTRITOS(NOM)  VALUES ('SAN ISIDRO');
INSERT INTO DISTRITOS(NOM)  VALUES ('SAN JUAN DE LURIGANCHO');
INSERT INTO DISTRITOS(NOM)  VALUES ('SAN JUAN DE MIRAFLORES');
INSERT INTO DISTRITOS(NOM)  VALUES ('SAN LUIS');
INSERT INTO DISTRITOS(NOM)  VALUES ('SAN MARTIN DE PORRES');
INSERT INTO DISTRITOS(NOM)  VALUES ('SAN MIGUEL');
INSERT INTO DISTRITOS(NOM)  VALUES ('SANTA ANITA');
INSERT INTO DISTRITOS(NOM)  VALUES ('SANTA MARIA DEL MAR');
INSERT INTO DISTRITOS(NOM)  VALUES ('SANTA ROSA');
INSERT INTO DISTRITOS(NOM)  VALUES ('SANTIAGO DE SURCO');
INSERT INTO DISTRITOS(NOM)  VALUES ('SURQUILLO');
INSERT INTO DISTRITOS(NOM)  VALUES ('VILLA EL SALVADOR');
INSERT INTO DISTRITOS(NOM)  VALUES ('VILLA MARIA DEL TRIUNFO');
go


/*Procedimiento Almacenado de Usuarios*/
create or alter proc usp_listadoUsuario
as
begin
  select u.ID_US,u.DNI,u.NOMBRE,u.APELLIDO,u.TELEFONO,u.DIRECCION,r.DESCRIPCION
  from USUARIOS as u
  inner join ROLES as r
  on u.ID_RO = r.ID_RO
end 
go

create or alter proc usp_agregarUsuario
  @DNI   CHAR(8),
  @NOMBRE    VARCHAR(50),
  @APELLIDO    VARCHAR(50),
  @TELEFONO  VARCHAR(10),
  @DIRECCION VARCHAR(150),
  @CORREO VARCHAR(100),
  @CLAVE  VARCHAR(50)
as
begin
	insert into USUARIOS(DNI,NOMBRE,APELLIDO,TELEFONO,DIRECCION,CORREO,CLAVE) values(@DNI,@NOMBRE,@APELLIDO,@TELEFONO,@DIRECCION,@CORREO,@CLAVE)
end 
go

create or alter proc usp_actualizarUsuario
  @ID_US INT,
  @DNI   CHAR(8),
  @NOMBRE    VARCHAR(50),
  @APELLIDO    VARCHAR(50),
  @TELEFONO  VARCHAR(10),
  @DIRECCION VARCHAR(150),
  @CORREO VARCHAR(100),
  @IMG VARCHAR(100),
  @CLAVE  VARCHAR(50)
as
begin
	update USUARIOS set DNI=@DNI,NOMBRE=@NOMBRE,APELLIDO=@APELLIDO,TELEFONO=@TELEFONO,DIRECCION=@DIRECCION,CORREO=@CORREO,CLAVE=@CLAVE,IMAGEN=@IMG where ID_US=@ID_US
end 
go

select * from USUARIOS
exec usp_listadoUsuario
exec usp_agregarUsuario '72571636','DIEGO','GUTARRA','943447957','Mz. H lt.4','diegogutarra@gmail.com','kjenwenfwenfiwe'
exec usp_actualizarUsuario 1,'72571636','DIEGO','GUTARRA','943447957','Mz. H lt.4','diegogutarra@gmail.com','kjenwenfwenfiwe','fewefwefewfwe'
go
/*--------------------------------------*/

/*Procedimiento Almacenado de Marcas*/
create or alter proc usp_listadoMarcas
as
begin
  select *
    from MARCAS
end 
go

create or alter proc usp_agregarMarcas

 
   @DESCRIPCION VARCHAR(30),
    @IMAGEN 	VARCHAR(1000)
as
begin
  insert into MARCAS(DESCRIPCION,IMAGEN) values(@DESCRIPCION,@IMAGEN)
end 
go


create or alter proc usp_actualizarMarcas
@ID_MA       INT,
@DESCRIPCION VARCHAR(30) ,
  @IMAGEN 	VARCHAR(1000)
as
begin
  update MARCAS set DESCRIPCION=@DESCRIPCION,IMAGEN=@IMAGEN where ID_MA=@ID_MA
end 
go

/*--------------------------------------*/

/*Procedimiento Almacenado de Categoria*/
create or alter proc usp_listadoCategoria
as
begin
  select *
    from CATEGORIAS
end 
go

create or alter proc usp_agregarCategoria

 @DESCRIPCION VARCHAR(30) ,
  @IMAGEN 	VARCHAR(1000)
as
begin
  insert into CATEGORIAS(DESCRIPCION,IMAGEN) values(@DESCRIPCION,@IMAGEN)
end 
go


create or alter proc usp_actualizarCategoria
@ID_CA       INT,
@DESCRIPCION VARCHAR(30) ,
  @IMAGEN 	VARCHAR(1000)
as
begin
  update CATEGORIAS set DESCRIPCION=@DESCRIPCION,IMAGEN=@IMAGEN where ID_CA=@ID_CA
end 
go

/*--------------------------------------*/

/*Procedimiento Almacenado de Distrito*/
create or alter proc usp_listadoDistritos
as
begin
 select ID_DI,NOM
    from DISTRITOS
end 
go

/*--------------------------------------*/

/*Procedimiento Almacenado de Direccion de Envio*/
create or alter proc usp_listadoDireccion
as
begin
 select *
    from DIRECCION_ENVIOS
end 
go

create or alter proc usp_agregarDireccion
@DIRECCION VARCHAR(100),
@REFERENCIA VARCHAR(100),
@ID_DI INT
as
begin
  insert into DIRECCION_ENVIOS(DIRECCION,REFERENCIA,ID_DI) values(@DIRECCION,@REFERENCIA,@ID_DI)
end 
go


create or alter proc usp_actualizarDireccion
@ID_EN       INT,
@DIRECCION VARCHAR(100),
@REFERENCIA VARCHAR(100),
@ID_DI INT
as
begin
  update DIRECCION_ENVIOS set  DIRECCION=@DIRECCION,REFERENCIA=@REFERENCIA,ID_DI=@ID_DI where ID_EN = @ID_EN
end 
go

/*--------------------------------------*/

create or alter proc usp_listadoRepuesto
as
begin
  select r.ID_RE,r.SKU,r.TITULO,r.DESCRIPCION,r.PRECIO,r.CANTIDAD,r.IMAGEN,m.DESCRIPCION,c.DESCRIPCION  from REPUESTOS as r
  inner join MARCAS as m
  on r.ID_MA = m.ID_MA
  inner join CATEGORIAS as c
  on r.ID_CA = c.ID_CA
end 
go

create or alter proc usp_listadoRepuestoActivos
as
begin
  select r.ID_RE,r.SKU,r.TITULO,r.DESCRIPCION,r.PRECIO,r.CANTIDAD,r.IMAGEN,m.DESCRIPCION,c.DESCRIPCION  from REPUESTOS as r
  inner join MARCAS as m
  on r.ID_MA = m.ID_MA
  inner join CATEGORIAS as c
  on r.ID_CA = c.ID_CA
  where r.ESTADO=1
end 
go

create or alter proc usp_agregarRepuesto
    @SKU			VARCHAR(30)	,
    @TITULO VARCHAR(100),
    @DESCRIPCION VARCHAR(100),
    @PRECIO      DECIMAL(6, 2) ,
    @CANTIDAD    TINYINT ,
    @ID_MA       INT,
    @ID_CA       INT
as
begin
	insert into REPUESTOS(SKU,TITULO,DESCRIPCION,PRECIO,CANTIDAD,ID_MA,ID_CA) values(@SKU,@TITULO,@DESCRIPCION,@PRECIO,@CANTIDAD,@ID_MA,@ID_CA)
end 
go

create or alter proc usp_actualizarRepuesto
	@ID_RE      INT, 
	@SKU			VARCHAR(30)	,
    @TITULO VARCHAR(100),
    @DESCRIPCION VARCHAR(100),
    @PRECIO      DECIMAL(6, 2) ,
    @CANTIDAD    TINYINT ,
	@IMAGEN 	VARCHAR(1000),
    @ID_MA       INT,
    @ID_CA       INT
as
begin
	update REPUESTOS set SKU=@SKU,TITULO=@TITULO,DESCRIPCION=@DESCRIPCION,PRECIO=@PRECIO,CANTIDAD=@CANTIDAD,IMAGEN=@IMAGEN,ID_MA=@ID_MA,ID_CA=@ID_CA where ID_RE=@ID_RE
end 
go


create or alter proc usp_desactivarRepuesto
	@ID_RE      INT
as
begin
	update REPUESTOS set ESTADO=0 where ID_RE=@ID_RE
end 
go